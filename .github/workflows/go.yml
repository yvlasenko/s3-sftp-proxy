name: Go
on: [push]
jobs:

  build:
    name: Build
    runs-on: ubuntu-18.04
    steps:

    - name: Set up Go 1.12
      uses: actions/setup-go@v1
      with:
        go-version: 1.12
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v1

    - name: Install musl-tools
      run: |
        sudo apt-get update
        sudo apt-get install -y musl-tools

    - name: Install golintci
      run: |
        set -x
        export GOPATH=$GITHUB_WORKSPACE/go
        curl https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b "$(go env GOPATH)/bin" v1.22.2

    - name: Prepare workspace
      run: |
        set -x
        export GOPATH=$GITHUB_WORKSPACE/go
        install -d $GOPATH/src/s3-sftp-proxy $GOPATH/bin
        shopt -s extglob dotglob
        mv !(go) $GOPATH/src/s3-sftp-proxy/

    - name: Get dependencies
      run: |
        set -x
        export GOPATH=$GITHUB_WORKSPACE/go
        cd $GOPATH/src/s3-sftp-proxy/
        go get -v -t -d ./...
        if [ -f Gopkg.toml ]; then
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            $GOPATH/bin/dep ensure
        fi

    - name: Run linter
      run: |
        set -x
        export GOPATH=$GITHUB_WORKSPACE/go
        export PATH=$PATH:$GOPATH/bin
        cd $GOPATH/src/s3-sftp-proxy/
        golangci-lint run

    - name: Build libc version
      run: |
        export GOPATH=$GITHUB_WORKSPACE/go
        cd $GOPATH/src/s3-sftp-proxy/
        go build -v -o $GITHUB_WORKSPACE/s3-sftp-proxy-libc

    - name: Build musl version
      run: |
        export GOPATH=$GITHUB_WORKSPACE/go
        export CC=/usr/bin/musl-gcc
        export CGO_ENABLED=0
        cd $GOPATH/src/s3-sftp-proxy/
        go build -v -o $GITHUB_WORKSPACE/s3-sftp-proxy-musl

    - name: Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: |
          s3-sftp-proxy-libc
          s3-sftp-proxy-musl
      env:
        GITHUB_TOKEN: ${{ secrets.GH_PACKAGES_TOKEN }}
